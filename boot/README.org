#+TITLE: boot
#+AUTHOR: Tanner Babcock
#+EMAIL: babkock@protonmail.com
#+LANGUAGE: en

This directory has two assembly files, `disk.asm` and `gdt.asm`, which are two bootloaders that implement the disk and the GDT,
respectively.

It also contains a very simple kernel written in C.

** Kernel source

#+begin_src c
void dummy(void) {
}

void main(void) {
    char *video_memory = (char *)0xb80a0;
    char *str = "Welcome to the kernel!";
    int x;

    /* prints the string in video memory, in alternating
     * colors, directly below "Landed in 32-bit Protected Mode" */
    for (x = 0; x < 22; x++) {
        (*video_memory++) = str[x];
        if (x % 2 == 0)
            (*video_memory++) = 0x0a;
        else if (x % 3 == 0)
            (*video_memory++) = 0x0d;
        else
            (*video_memory++) = 0x0c;
    }
}
#+end_src

** Bootloader

#+begin_src asm
[bits 16]
load_kernel:
    mov bx, MSG_LOAD_KERNEL
    call print
    call print_nl

    mov bx, KERNEL_OFFSET
    mov dh, 2
    mov dl, [BOOT_DRIVE]
    call disk_load
    ret
#+end_src
